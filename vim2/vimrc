" }}}
" Vundle ------------------------------------------------------------------- {{{

" https://github.com/gmarik/vundle

set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Let Vundle manage Vundle (required)
Bundle 'gmarik/vundle'

" Vim stuff
Bundle "tpope/vim-surround.git"
Bundle "Raimondi/delimitMate"
Bundle "scrooloose/nerdtree.git"
Bundle "sjbach/lusty"
Bundle "tomtom/tcomment_vim.git"
Bundle "Lokaltog/vim-easymotion"
Bundle "terryma/vim-multiple-cursors"

" Frontend
Bundle "mattn/emmet-vim"
Bundle "itspriddle/vim-jquery"
Bundle "othree/html5.vim"

" Snippets
Bundle "SirVer/ultisnips"

" Git
Bundle "tpope/vim-fugitive"

" Markdown
Bundle "tpope/vim-markdown"

" Ledger
Bundle "ledger/vim-ledger"

" PHP Documentor
Bundle "tobyS/pdv"
" Vmustache template engine, prerequisite for PDV
Bundle "tobyS/vmustache"

" Colors
Bundle "chrisbra/color_highlight"
Bundle "bling/vim-airline"
Bundle "altercation/vim-colors-solarized"

" EditorConfig
Bundle "editorconfig/editorconfig-vim"

filetype plugin indent on
syntax on



" }}}
" General config ----------------------------------------------------------- {{{

" Leader
let mapleader=","

" Show relative line numbers
set nonumber
set relativenumber

" Allow backspace in insert mode
set backspace=indent,eol,start

" Store lots of :cmdline history
set history=1000

" Show incomplete commands at the bottom
set showcmd

" Show current mode at the bottom
set showmode

" My eyes!
set novisualbell

" Reload files changed outside of vim
set autoread

" Allow hiding unmodified buffers
set hidden

" Change to the current working directory when moving among buffers
set autochdir

" Show invisibles: tabs, trailing spaces
set list listchars=tab:\ \ ,trail:·

" Use underscore as a delimiter for word movement
" http://lglinux.blogspot.com/2008/04/vim-word-movement-with-underscore.html
" set iskeyword-=_

" No swap files, backup files, or writebackup files
set noswapfile
set nobackup
set nowb

" Keep undo history across sessions, by storing in file. Only works all the time.
silent !mkdir ~/temp/.vim/backups > /dev/null 2>&1
set undodir=~/temp/.vim/backups
set undofile

" Typography: Font and line spacing
set guifont=Inconsolata:h16,Monaco:h17
set linespace=2

" Show a column at column 80
set colorcolumn=80



" }}}
" Indentation and wrapping ------------------------------------------------- {{{

" Copy indent from current line when opening new line
set autoindent

" Insert indent after a line ending in { or before a line starting with }
set smartindent

" Break lines by word, not character
set linebreak

" Spaces not tabs
set expandtab

" Number of spaces that a <tab> counts for
set tabstop=2

" Number of spaces for >> and <<
set shiftwidth=2

" Backspace by indendation level
set softtabstop=2



" }}}
" Command line completion -------------------------------------------------- {{{

" Enhanced command line completion
set wildmenu

" Ignore these extensions in wildmenu
set wildignore+=.git
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg
set wildignore+=*.sw?
set wildignore+=*.DS_Store
set wildignore+=*.zip



" }}}
" Scrolling ---------------------------------------------------------------- {{{

" Start scrolling N lines from the top or bottom
set scrolloff=7

" Start scrolling N lines from the left or right
set sidescrolloff=30

" Minimal number of columns to scroll horizontally
set sidescroll=1

" Allow going to next or previous lines with these characters
set whichwrap+=<,>,[,],h,l



" }}}
" Statusline --------------------------------------------------------------- {{{

" Always display a statusline
set laststatus=2



" }}}
" Search settings ---------------------------------------------------------- {{{

" Search incrementally
set incsearch

" Don't highlight searches by default
set nohlsearch

" Ignore case when searching but respect uppercases when sought
set ignorecase
set smartcase

" Search and replace globally (`/g`) by default
set gdefault



" }}}
" Keymaps ------------------------------------------------------------------ {{{

" Command line
map ; :

" Write
map <leader>w :w<cr>
imap <leader>w <C-o>:w<cr>

" Write and close
map <leader>x :x<cr>
imap <leader>x <C-o>:x<cr>

" Edit new file
map <leader>n :enew<cr>

" Close buffer
nmap <leader>c :close<cr>

" Delete all buffers
nmap <leader>0 :1,1000bd<cr>:echo "Deleted all buffers (probably)"<cr>

" Sort all lines
nmap <leader>2 :sort<cr>

" Call DumbQuotes()
nmap <leader>3 :call DumbQuotes()<cr><cr>

" Toggle line-wrapping
nmap <leader>4 :set wrap!<cr>

" Start a global search-and-replace
nmap <leader>5 :%s/

" Toggle spell-checking
nmap <leader>6 :set spell!<cr>

" Save a file to the desktop
nmap <leader>8 :saveas ~/Desktop/

" Undo everything
nmap <leader>9 :earlier 1000<cr>:echo "Undid 1000 things"<cr>

" More-intelligent line navigation
nmap j gj
nmap k gk

" Create vertical and horizontal splits
nnoremap <silent> sss <C-w>s
nnoremap <silent> vv <C-w>v

" Navigate among splits
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-j> <C-w>j
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-l> <C-w>l

" Yank to the end of the line like C and D
nnoremap Y y$

" Automatically center on the next search result
nnoremap n nzz

" Jump between the two last-used buffers
nnoremap <silent> ,. :b#<CR>

" Dashes and underscores
imap <silent> <D-D> -
imap <silent> <D-K> _
imap <silent> <D-d> -
imap <silent> <D-k> _

" Hashrockets
imap <c-k> ->
imap <c-l> <space>=><space>

" Toggle folds
" http://vimcasts.org/episodes/how-to-fold/
nnoremap <Space> za

" }}}
" GUI options -------------------------------------------------------------- {{{

" Disable the scrollbars
set guioptions-=r
set guioptions-=L

" Disable the macvim toolbar
set guioptions-=T



" }}}
" Functions ---------------------------------------------------------------- {{{

function! DumbQuotes()
    :%s/’/'
    :%s/‘/'
    :%s/’/'
    :%s/â€˜/'
    :%s/â€™/'
    :%s/â€™/'
    :%s/“/"
    :%s/”/"
    :%s/“/"
    :%s/â€œ/"
    :%s/â€/"
    :%s/–/--
    :%s/—/---
    :%s/－/---
    :%s/â€"/---
    :%s/…/...
    :%s/â€¦/...
    :%s/•/\*
endfunction


