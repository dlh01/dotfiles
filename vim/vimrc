" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible


" ----------------------------------------------------- Pathogen
call pathogen#infect()
syntax on
filetype plugin on


" ----------------------------------------------------- General config

let mapleader=","

" Show relative line numbers
set nonumber
set relativenumber

" Allow backspace in insert mode
set backspace=indent,eol,start

" Store lots of :cmdline history
set history=1000

" Show incomplete commands at the bottom
set showcmd

" Show current mode at the bottom
set showmode

" My eyes!
set novisualbell

" Reload files changed outside of vim
set autoread

" Allow hiding unmodified buffers
set hidden

" Change to the current working directory when moving among buffers
set autochdir

" Yank to clipboard
set clipboard+=unnamed

" Show invisibles: tabs, trailing spaces, EOL
set listchars=tab:▸\ ,eol:¬,trail:-

" Use underscore as a delimiter for word movement
" http://lglinux.blogspot.com/2008/04/vim-word-movement-with-underscore.html
" set iskeyword-=_


" Search settings
" --------------------------------------------------------------------

" Search incrementally
set incsearch

" Don't highlight searches by default
set nohlsearch

" Ignore case when searching but respect uppercases when sought
set ignorecase
set smartcase

" Search and replace globally (`/g`) by default
set gdefault


" Swap file settings
" --------------------------------------------------------------------

" No swap files, backup files, or writebackup files
set noswapfile
set nobackup
set nowb


" Undo settings
" --------------------------------------------------------------------

" Keep undo history across sessions, by storing in file. Only works all the time.
silent !mkdir ~/temp/.vim/backups > /dev/null 2>&1
set undodir=~/temp/.vim/backups
set undofile


" Indentation and wrapping
" --------------------------------------------------------------------

" Copy indent from current line when opening new line
set autoindent

" Insert indent after a line ending in { or before a line starting with }
set smartindent

" Break lines by word, not character
set linebreak

" Spaces not tabs
set expandtab

" Number of spaces that a <tab> counts for
set tabstop=2

" Number of spaces for >> and <<
set shiftwidth=2

" Backspace by indendation level
set softtabstop=2


" Command line completion
" --------------------------------------------------------------------

" Enhanced command line completion
set wildmenu

" Ignore these extensions in wildmenu
set wildignore+=.git
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg
set wildignore+=*.sw?
set wildignore+=*.DS_Store
set wildignore+=*.zip


" Scrolling
" --------------------------------------------------------------------

" Start scrolling N lines from the top or bottom
set scrolloff=7

" Start scrolling N lines from the left or right
set sidescrolloff=30

" Minimal number of columns to scroll horizontally
set sidescroll=1

" Allow going to next or previous lines with these characters
set whichwrap+=<,>,[,],h,l



" Statusline
" --------------------------------------------------------------------

" Always display a statusline
set laststatus=2

" Configure statusline content
set statusline=\     
set statusline+=%f    " Path.
set statusline+=%m   " Modified flag.
set statusline+=%r   " Readonly flag.
set statusline+=%w   " Preview window flag.
set statusline+=\    " Space.
set statusline+=%{fugitive#statusline()}
set statusline+=%=   " Right align.
"set statusline+=(%{getcwd()})\  " get current working directory
" File format, encoding and type.  Ex: "(unix/utf-8/python)"
set statusline+=(
" set statusline+=%{&ff}                        " Format (unix/DOS).
" set statusline+=/
" set statusline+=%{strlen(&fenc)?&fenc:&enc}   " Encoding (utf-8).
" set statusline+=/
set statusline+=%{&ft}                        " Type (python).
set statusline+=)
" Line and column position and counts.
set statusline+=\ (line\ %l\/%L,\ col\ %03c)
set statusline+=\   


" ------------------------------------------------------------ Keymaps

imap <D-/> <Esc>:TComment<CR>i
imap <c-k> ->
imap <c-l> <space>=><space>
imap <leader>w <C-o>:w<cr>
imap <leader>x <C-o>:x<cr>
imap <silent> <D-'> `
imap <silent> <D-D> -
imap <silent> <D-K> _
imap <silent> <D-d> -
imap <silent> <D-k> _
map ," ysiw"
map ,' ysiw'
map ,( ysiw(
map ,) ysiw)
map ,[ ysiw[
map ,] ysiw]
map ,{ ysiw{
map ,} ysiw}
map ; :
map <D-/> :TComment<CR>
map <c-\> :NERDTree %<cr>
map <leader>b :bd<cr>
map <leader>eg :NERDTree ~/localhost/gollum/<cr>
map <leader>ev :NERDTree ~/dotfiles/vim/<cr>
map <leader>ez :NERDTree ~/dotfiles/zsh/<cr>
map <leader>n :enew<cr>
map <leader>w :w<cr>
map <leader>x :x<cr>
nmap <D-A> :Tabularize /
nmap <D-N> :NERDTreeToggle<CR>
nmap <D-]> gqap
nmap <F8> :TagbarOpenAutoClose<CR>
nmap <leader>0 :1,1000bd<cr>:echo "Deleted all buffers (probably)"<cr>
nmap <leader>2 :sort<cr>
nmap <leader>3 :call DumbQuotes()<cr><cr>
nmap <leader>4 :set wrap!<cr>
nmap <leader>5 :%s/
nmap <leader>6 :set spell!<cr>
nmap <leader>8 :saveas ~/Desktop/
nmap <leader>9 :earlier 1000<cr>:echo "Undid 1000 things"<cr>
nmap <leader>i :set list!<cr>
nmap <silent> ,vc yy:<C-f>p<C-c><CR>
nmap <silent> ,vr :so %<CR>
nmap <silent> <leader>f :! open %<cr><cr>
nmap j gj
nmap k gk
nmap sj :SplitjoinSplit<cr>
nmap sk :SplitjoinJoin<cr>
nnoremap <F6> :GundoToggle<CR>
nnoremap <F7> :set hlsearch! hlsearch?<cr>
nnoremap <leader>\0 :set colorcolumn=0<cr>
nnoremap <leader>\\ :set colorcolumn=80<cr>
nnoremap <leader>gc :Gcommit<cr>
nnoremap <leader>gd :Gdiff<cr>
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gw :Gwrite<cr>
nnoremap <silent> ,. :b#<CR>
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-j> <C-w>j
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-l> <C-w>l
nnoremap <silent> sss <C-w>s
nnoremap <silent> vv <C-w>v
nnoremap N Nzz
nnoremap Y y$
nnoremap n nzz
vmap ," c"<C-R>""<ESC>
vmap ,' c'<C-R>"'<ESC>
vmap ,( c( <C-R>" )<ESC>
vmap ,) c(<C-R>")<ESC>
vmap ,[ c[ <C-R>" ]<ESC>
vmap ,] c[<C-R>"]<ESC>
vmap ,{ c{<C-R>"}<ESC>
vmap ,} c{ <C-R>" }<ESC>
vmap <D-A> :Tabularize /
" Toggle current fold open or closed
" http://vimcasts.org/episodes/how-to-fold/
nnoremap <Space> za
" 'Refocus' folds
" https://github.com/sjl/dotfiles/blob/eea18b00b8c74943f5094fddf91d3c2a7e0a7242/vim/vimrc#L534
nnoremap ,z zMzvzz
nmap <leader>c :close<cr>
