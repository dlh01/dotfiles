echo "Hello, this is zshrc calling."
echo "The latest uptime statistics:" `uptime`

# Source aliases and private files
source ~/dotfiles/aliases
source ~/.secrets

# Set up PATH
# Ensure /usr/local/bin takes precedence over /usr/bin
# Include brew-installed GNU core utilities bin
# Add npm-installed package bin
# Add MAMP bin
export PATH=/usr/local/share/python:/usr/local/share/python3:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$(brew --prefix coreutils)/libexec/gnubin:$(brew --prefix)/share/npm/bin:/Applications/MAMP/Library/bin

# Enable advanced tab-completion
autoload -Uz compinit
compinit

# Enable autocorrect
setopt correctall

# Enable advanced prompts
autoload -Uz promptinit
promptinit

# Enable gathering of VCS information for Git and SVN
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' check-for-changes true # potential performance drag
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked # show untracked files
setopt prompt_subst

# Customize the prompt
export PROMPT='%F{green}%~ : ) %f'
export RPROMPT='%F{green}${vcs_info_msg_0_}%f'

# Enable autocd
setopt autocd

# Enable extended globbing
setopt extendedglob

# Keep 10000 lines of history within the shell and save them to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history
# Write the history file in the ':start:elapsed;command' format
setopt EXTENDED_HISTORY
# Write to the history file immediately, not when the shell exits
setopt INC_APPEND_HISTORY
# Share history between all sessions
setopt SHARE_HISTORY
# Expire a duplicate event first when trimming history
setopt HIST_EXPIRE_DUPS_FIRST
# Do not record an event that was just recorded again
setopt HIST_IGNORE_DUPS
# Delete an old recorded event if a new event is a duplicate
setopt HIST_IGNORE_ALL_DUPS
# Do not record an event starting with a space
setopt HIST_IGNORE_SPACE
# Do not execute immediately upon history expansion
setopt HIST_VERIFY

# Write a home folder-based `cd` command from any directory
CDPATH=~

# Allow autocompletions based on substrings
if [ "x$CASE_SENSITIVE" = "xtrue" ]; then
  zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
  unset CASE_SENSITIVE
else
  zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
fi

# Use vi keybindings
bindkey -v

# Use Ctrl-r for incremental history searches
bindkey '^r' history-incremental-search-backward

# emacs-style keybindings for jumping to line endings or beginnings
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# OSX-style keybindings for jumping to line endings or beginnings
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

# vim is our editor
export EDITOR=vim

# Makes a directory and changes to it.
function mkdcd {
  [[ -n "$1" ]] && mkdir -p "$1" && builtin cd "$1"
}

# Bind Fn+Delete to forward-delete
bindkey "^[[3~" delete-char

# Expand .... to ../..
function expand-dot-to-parent-directory-path {
  if [[ $LBUFFER = *.. ]]; then
    LBUFFER+='/..'
  else
    LBUFFER+='.'
  fi
}
zle -N expand-dot-to-parent-directory-path
bindkey "." expand-dot-to-parent-directory-path

# Source autojump
[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

# Start an HTTP server from a directory, optionally specifying the port
server() {
    # Get port (if specified)
    local port="${1:-8000}"

    # Open in the browser
    open "http://localhost:${port}/"

    # Redefining the default content-type to text/plain instead of the default
    # application/octet-stream allows "unknown" files to be viewable in-browser
    # as text instead of being downloaded.
    #
    # Unfortunately, "python -m SimpleHTTPServer" doesn't allow you to redefine
    # the default content-type, but the SimpleHTTPServer module can be executed
    # manually with just a few lines of code.
    python -c $'import SimpleHTTPServer;\nSimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map[""] = "text/plain";\nSimpleHTTPServer.test();' "$port"
}

# Sets the terminal window title.
function set-terminal-window-title {
  if [[ "$TERM" == ((x|a|ml|dt|E)term*|(u|)rxvt*) ]]; then
    printf "\e]2;%s\a" ${(V)argv}
  fi
}

# Sets the terminal tab title.
function set-terminal-tab-title {
  if [[ "$TERM" == ((x|a|ml|dt|E)term*|(u|)rxvt*) ]]; then
    printf "\e]1;%s\a" ${(V)argv}
  fi
}

# Sets the tab and window titles with a given path.
function set-titles-with-path {
  emulate -L zsh
  setopt EXTENDED_GLOB

  local absolute_path="${${1:a}:-$PWD}"

  if [[ "$TERM_PROGRAM" == 'Apple_Terminal' ]]; then
    printf '\e]7;%s\a' "file://$HOST${absolute_path// /%20}"
  else
    local abbreviated_path="${absolute_path/#$HOME/~}"
    local truncated_path="${abbreviated_path/(#m)?(#c15,)/...${MATCH[-12,-1]}}"
    unset MATCH

    if [[ "$TERM" == screen* ]]; then
      set-screen-window-title "$truncated_path"
    else
      set-terminal-window-title "$abbreviated_path"
      set-terminal-tab-title "$truncated_path"
    fi
  fi
}

# Node and modules path
# http://shaw.al.s3.amazonaws.com/nicar13/nicar-2013-node.html
export NODE_PATH="/usr/local/lib/node: \
      /usr/local/lib/node_modules: \
      /usr/local/share/npm/lib/node_modules"

# Help wp-cli work with MAMP
export WP_CLI_PHP=/Applications/MAMP/bin/php/php5.4.10/bin/php

# Source history-substring-search
source ~/dotfiles/zsh/history-substring-search/zsh-history-substring-search.zsh

# Show untracked files in `vcs_info`
function +vi-git-untracked(){
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
    git status --porcelain | grep '??' &> /dev/null ; then
      hook_com[unstaged]+='T'
  fi
}

# Do just before presenting the prompt
precmd () {
  vcs_info
  set-titles-with-path
}

# Sources:
# Everything in the `community` directory
# www.gentoo.org/doc/en/zsh.xml
# The .zshrc that came with a Dreamhost shell
# http://zsh.sourceforge.net/Intro/intro_13.html
# https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/completion.zsh
# https://github.com/skwp/dotfiles/tree/master/zsh
# http://zsh.sourceforge.net/Doc/Release/User-Contributions.html#Version-Control-Information
# http://zsh.git.sourceforge.net/git/gitweb.cgi?p=zsh/zsh;a=blob;f=Functions/Prompts/prompt_walters_setup
# http://arjanvandergaag.nl/blog/customize-zsh-prompt-with-vcs-info.html
# http://unix.stackexchange.com/a/14267
# https://github.com/holman/dotfiles/blob/master/zsh/config.zsh
# http://hackercodex.com/guide/mac-osx-mountain-lion-10.8-configuration/
# http://superuser.com/questions/169920/binding-fn-delete-in-zsh-on-mac-os-x
# http://www.zsh.org/mla/workers/2011/msg00554.html
# https://github.com/sunaku/home/blob/master/.zsh/config/prompt.zsh

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
